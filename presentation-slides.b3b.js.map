{"version":3,"sources":["webpack:///./src/web-components/presentation-slides.js"],"names":["PresentationSlides","HTMLElement","total","_slides","length","slide","_slide","value","_value","validSlide","Number","isInteger","setAttribute","Error","prevSlide","prev","_transition","from","to","forward","nextElementSibling","onExit","animate","Promise","all","Array","children","filter","el","tagName","reverse","map","i","opacity","transform","duration","delay","fill","easing","finished","classList","remove","add","onEnter","connectedCallback","console","log","querySelectorAll","slideSelector","getAttribute","attributeChangedCallback","name","oldValue","newValue","is","observedAttributes"],"mappings":"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","file":"presentation-slides.b3b.js","sourcesContent":["class PresentationSlides extends HTMLElement {\n  static is = 'presentation-slides';\n  static slideSelector = 'section';\n  static observedAttributes = ['slide'];\n\n  get total() {\n    return this._slides.length;\n  }\n\n  get slide() {\n    return this._slide;\n  }\n\n  set slide(value) {\n    const _value = +value;\n    if (_value === this._slide) return;\n    const validSlide =\n      _value && Number.isInteger(_value) && _value <= this._slides.length;\n    if (!validSlide) {\n      this.setAttribute('slide', `${this._slide}`);\n      throw new Error(`Slide ${value} is not a valid slide`);\n    }\n    let prevSlide;\n    if (this._slide) {\n      prevSlide = this._slide;\n    }\n    this._slide = +value;\n    this.setAttribute('slide', `${_value}`);\n    let prev;\n    if (prevSlide) {\n      prev = this._slides[prevSlide - 1];\n    }\n    this._transition(prev, this._slides[_value - 1]);\n  }\n\n  async _transition(from, to) {\n    let forward = true;\n    // disappearing\n    if (from) {\n      forward = from.nextElementSibling === to;\n      if (from.onExit) {\n        await from.onExit();\n      } else if (from.animate) {// default\n        await Promise.all(\n          Array.from(from.children)\n            .filter(el => el.tagName !== 'style')\n            .reverse()\n            .map((el, i) => el.animate(\n              {\n                opacity: [1, 0],\n                filter: ['blur(0)', 'blur(5px)'],\n                transform: [\n                  'translateX(0)',\n                  `translateX(${forward ? '-' : ''}100px)`\n                ],\n              },\n              {\n                duration: 200,\n                delay: i * 10,\n                fill: 'both',\n                easing: 'cubic-bezier(.41,0,.32,1)',\n              }\n            ).finished)\n        );\n      }\n      from.classList.remove('visible');\n    }\n    // appearing\n    to.classList.add('visible');\n    if (to.onEnter) {\n      await to.onEnter();\n    } else if (to.animate) {// default\n      await Promise.all(\n        Array.from(to.children)\n          .filter(el => el.tagName !== 'style')\n          .map((el, i) => el.animate(\n            {\n              opacity: [0, 1],\n              filter: ['blur(5px)', 'blur(0)'],\n              transform: [\n                `translateX(${forward ? '' : '-'}100px)`,\n                'translateX(0)'\n              ],\n            },\n            {\n              duration: 500,\n              delay: i * 250,\n              fill: 'both',\n              easing: 'cubic-bezier(.41,0,.32,1)',\n            }\n          ).finished)\n      );\n    }\n  }\n\n  // constructor() {\n  //   super();\n  // }\n\n  connectedCallback() {\n    console.log('presentation-manager connected');\n    this._slides = this.querySelectorAll(PresentationSlides.slideSelector);\n    console.log(this._slides);\n    if (!this._slides.length) {\n      throw new Error('No slide to display');\n    }\n    this.slide = this.getAttribute('slide') || 1;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    this[name] = newValue;\n  }\n}\n\nexport default PresentationSlides;\n\n\n\n// WEBPACK FOOTER //\n// ./src/web-components/presentation-slides.js"],"sourceRoot":""}