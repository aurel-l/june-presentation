{"version":3,"sources":["webpack:///./~/pdb-web-components/src/components/pdb-data-loader.js","webpack:///./~/pdb-web-components/src/components/pdb-prints.js","webpack:///./~/pdb-web-components/src/components/index.js"],"names":["pdbIdPattern","idToUrl","url","id","toLowerCase","trim","replace","PdbDataLoader","HTMLElement","observedAttributes","_render","pdbid","sources","querySelectorAll","source","parentElement","removeChild","document","createElement","src","dataLoader","querySelector","dataLoaderElementName","appendChild","_planRender","_plannedRender","requestAnimationFrame","_pdbid","value","_value","toUpperCase","test","Error","setAttribute","removeAttribute","constructor","bind","connectedCallback","disconnectedCallback","attributeChangedCallback","attributeName","oldValue","newValue","selector","raw","response","docs","supportedSizes","Set","organismMap","Map","categoryUrls","responseData","data","citation_year","title","org","entry_organism_scientific_name","size","output","get","split","spm","sample_preparation_method","scientificName","contains","experimental_method","length","experiment_data_available","endsWith","number_of_protein_chains","present","number_of_RNA_chains","number_of_DNA_chains","number_of_bound_entities","uniqueId","categories","keys","PdbPrints","_handleLoadEvent","event","detail","entry_entity","slice","sizePx","shadowRoot","attachShadow","mode","classList","add","_namespace","style","orientation","shadyRoot","innerHTML","entries","filter","c","_include","has","_exclude","map","category","_responseData","_title","join","_data","_orientation","_size","Number","isNaN","sort","a","b","Math","abs","console","warn","include","_values","v","exclude","tagName","addEventListener","removeEventListener"],"mappings":"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","file":"pdb-web-components.dc2.js","sourcesContent":["const pdbIdPattern = /^[A-Z0-9]{4}$/;\n\nconst idToUrl = ((url) => id => `${url}&q=pdb_id:(${id.toLowerCase()})`)(`\n  //www.ebi.ac.uk/pdbe/search/pdb/select?\n  fl=pdb_id,organism_synonyms,number_of_bound_entities%2C+\n  number_of_protein_chains%2Cexperimental_method%2C+\n  experiment_data_available%2Cexpression_host_sci_name%2C+citation_year%2C+\n  entry_organism_scientific_name,number_of_RNA_chains,number_of_DNA_chains,\n  sample_preparation_method,emdb_id&wt=json\n`.trim().replace('\\n', ''));\n\nclass PdbDataLoader extends HTMLElement {\n  static get observedAttributes () {\n    return ['pdbid'];\n  }\n\n  _render () {\n    const id = this.pdbid;\n    // Clean up the DOM\n    const sources = this.querySelectorAll('source');\n    for (const source of sources) {\n      source.parentElement.removeChild(source);\n    }\n    // If no ID, skip\n    if (!id) return;\n    // We have an ID, add or modify a data-loader element to fetch the data\n    const source = document.createElement('source');\n    source.src = idToUrl(id);\n    let dataLoader = this.querySelector(PdbDataLoader.dataLoaderElementName);\n    // If no data loader yet, create and add it\n    if (!dataLoader) {\n      dataLoader = document.createElement(PdbDataLoader.dataLoaderElementName);\n      dataLoader.appendChild(source);\n      this.appendChild(dataLoader);\n    } else {\n      dataLoader.appendChild(source);\n    }\n  }\n\n  _planRender () {\n    // If render is already planned, skip\n    if (this._plannedRender) return;\n    this._plannedRender = true;\n    requestAnimationFrame(() => {\n      this._plannedRender = false;\n      this._render();\n    });\n  }\n\n  // Getters/Setters\n  // pdbid\n  get pdbid () {\n    return this._pdbid;\n  }\n\n  set pdbid (value) {\n    const _value = (value || '').trim().toUpperCase();\n    if (_value && !pdbIdPattern.test(_value)) {\n      throw new Error(`${value} is not a valid PDB ID`);\n    }\n    this._pdbid = _value || null;\n    if (this._pdbid) {\n      this.setAttribute('pdbid', this.pdbid);\n      this._planRender();\n    } else {\n      this.removeAttribute('pdbid');\n    }\n  }\n\n  // Custom element reactions\n  constructor () {\n    super();\n    // set defaults\n    this._pdbid = null;\n    // bind functions\n    this._planRender = this._planRender.bind(this);\n    this._render = this._render.bind(this);\n  }\n\n  connectedCallback () {\n    this._planRender();\n  }\n\n  disconnectedCallback () {\n    this._plannedRender = false;\n  }\n\n  attributeChangedCallback (attributeName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[attributeName] = newValue;\n  }\n}\nPdbDataLoader.dataLoaderElementName = 'data-loader';\n\nexport default PdbDataLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./~/pdb-web-components/src/components/pdb-data-loader.js","const selector = raw => raw.response.docs[0];\nconst supportedSizes = new Set([36, 48, 64, 128]);\n\nconst organismMap = new Map([\n  ['dinophyceae', 'algae'],\n  ['embryophyta', 'plant'],\n  ['streptophyta', 'plant'],\n  ['saccharomyces cerevisiae', 'yeast'],\n  ['saccharomyces', 'yeast'],\n  ['drosophila', 'fly'],\n  ['gallus gallus', 'chicken'],\n  ['homo sapiens', 'human'],\n  ['sus scrofa', 'pig'],\n  ['bos taurus', 'cow'],\n  ['mus musculus', 'mouse'],\n  ['rattus', 'rat'],\n  ['rat', 'rat'],\n  ['mammalia', 'mammal'],\n  ['fungi', 'fungi'],\n  ['ascomycota', 'fungi'],\n  ['viruses', 'virus'],\n  ['bacteria', 'bacteria'],\n  ['archaea', 'archaea'],\n  ['eukaryota', 'eukaryote'],\n  ['synthetic constructor', 'artificial'],\n]);\n\nconst categoryUrls = new Map([\n  [\n    'PrimaryCitation',\n    {\n      url: 'citations',\n      responseData (data) {\n        return data.citation_year ? 'published' : 'unpublished';\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'published':\n            return 'A paper describing this entry has been published';\n          case 'unpublished':\n            return (\n              'The PDB does not have any information about ' +\n              'a published paper describing this entry'\n            );\n          default:\n            return (\n              'This icon conveys information about whether or not a paper ' +\n              'describing this entry has been published'\n            );\n        }\n      },\n    },\n  ],\n  [\n    'Taxonomy',\n    {\n      url: 'analysis',\n      responseData (data) {\n        const org = data.entry_organism_scientific_name;\n        // If not all the same\n        if (new Set(org).size > 1) return 'multiple';\n        // Get from organism map variable;\n        const output = organismMap.get(org[0].split('|')[0].toLowerCase());\n        return output || 'other';\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'artificial':\n            return (\n              'The biomacromolecules in this entry were artificially designed'\n            );\n          case 'other':\n            return (\n              'Information about the source organism of the biomacromolecules' +\n              ' in this entry can be obtained by clicking on the icon'\n            );\n          case 'multiple':\n            return (\n              'The biomacromolecules in this entry derive ' +\n              'from multiple organisms'\n            );\n          case 'fly':\n            return (\n              'The source organism of the biomacromolecules ' +\n              'in this entry is fruit-fly'\n            );\n          case 'CGIlogoUnknown':\n            return (\n              'This icon conveys information about the source organism ' +\n              'of the biomacromolecules in this entry'\n            );\n          default:\n            return (\n              'The source organism of the biomacromolecules in this entry is ' +\n              responseData\n            );\n        }\n      },\n    },\n  ],\n  [\n    'Expressed',\n    {\n      url: 'analysis',\n      responseData (data) {\n        const spm = data.sample_preparation_method;\n        if (!spm) {\n          const scientificName = data.entry_organism_scientific_name;\n          if (scientificName.toLowerCase().contains('synthetic construct')) {\n            return 'synthetic';\n          }\n          return 'CGIlogoUnknown';\n        }\n        // If not all the same\n        if (new Set(spm).size > 1) return 'multiple';\n        switch (spm[0].toLowerCase()) {\n          case 'engineered':\n            return 'expressed';\n          case 'synthetic':\n            return 'synthetic';\n          case 'natural':\n            return 'purified';\n          default:\n            return 'other';\n        }\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'expressed':\n            return (\n              'The sample of the biomacromolecules in this entry was ' +\n              'obtained by expression and purification'\n            );\n          case 'synthetic':\n            return (\n              'The sample of the biomacromolecules in this entry was ' +\n              'obtained by chemical synthesis'\n            );\n          case 'purified':\n            return (\n              'The sample of the biomacromolecules in this entry was ' +\n              'extracted and purified from a biological source'\n            );\n          case 'multiple':\n            return (\n              'The sample of the biomacromolecules in this entry was ' +\n              'obtained using multiple techniques'\n            );\n          case 'other':\n            return (\n              'The sample of the biomacromolecules in this entry was ' +\n              'obtained using techniques other than expression, ' +\n              'chemical synthesis or extraction from a biological source'\n            );\n          case 'CGIlogoUnknown':\n            return (\n              'This icon conveys information about the production techniques ' +\n              'used to obtain the biomacromolecular samples for this entry'\n            );\n          default:\n            throw new Error('Something wrong happened');\n        }\n      },\n    },\n  ],\n  [\n    'Experimental',\n    {\n      url: 'experiment',\n      responseData (data) {\n        let output;\n        switch (data.experimental_method[0].toLowerCase()) {\n          case 'x-ray diffraction':\n            output = 'xray';\n            break;\n          case 'solution nmr':\n          case 'solid-state nmr':\n            output = 'nmr';\n            break;\n          case 'electron microscopy':\n            output = 'em';\n            break;\n          default:\n            return 'other';\n        }\n        if (data.experimental_method.length !== 1) {\n          output = 'hybrid';\n        }\n        if (data.experiment_data_available !== 'y') {\n          output += 'NoData';\n        }\n        return output;\n      },\n      title (responseData) {\n        let output;\n        switch (responseData.replace('NoData', '')) {\n          case 'xray':\n            output = (\n              'The structure was determined using X-ray crystallography'\n            );\n            break;\n          case 'nmr':\n            output = 'The structure was determined using NMR spectroscopy';\n            break;\n          case 'em':\n            output = 'The structure was determined using Electron Microscopy';\n            break;\n          case 'multiple':\n            output = (\n              'The structure was determined using Electron Crystallography'\n            );\n            break;\n          case 'extal':\n            output = (\n              'The sample of the biomacromolecules in this entry was ' +\n              'obtained using techniques other than expression, ' +\n              'chemical synthesis or extraction from a biological source'\n            );\n            break;\n          case 'hybrid':\n            output = (\n              'The structure was determined using a hybrid technique'\n            );\n            break;\n          case 'other':\n            output = (\n              'The structure was determined using a technique other than ' +\n              'X-ray, NMR, EM, or a hybrid thereof'\n            );\n            break;\n          default:\n            return (\n              'This icon conveys information about the ' +\n              'structure-determination technique for this entry'\n            );\n        }\n        return `${output} (${\n          responseData.endsWith('NoData') ? 'no ' : ''\n        }experimental data available)`;\n      },\n    },\n  ],\n  [\n    'Protein',\n    {\n      url: 'analysis',\n      responseData (data) {\n        return data.number_of_protein_chains ? 'present' : 'absent';\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'present':\n            return 'This entry contains protein';\n          case 'absent':\n            return 'This entry does not contain protein';\n          case 'CGIlogoUnknown':\n            return (\n              'This icon conveys information about the presence ' +\n              'of protein in the entry'\n            );\n          default:\n            throw new Error('Something bas happened');\n        }\n      },\n    },\n  ],\n  [\n    'NucleicAcid',\n    {\n      url: 'analysis',\n      responseData (data) {\n        const present = data.number_of_RNA_chains || data.number_of_DNA_chains;\n        return present ? 'present' : 'absent';\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'present':\n            return 'This entry contains nucleic acid (DNA, RNA)';\n          case 'absent':\n            return 'This entry does not contain nucleic acid (DNA, RNA)';\n          case 'CGIlogoUnknown':\n            return (\n              'This icon conveys information about the presence ' +\n              'of nucleic acid (DNA, RNA) in the entry'\n            );\n          default:\n            throw new Error('Something bas happened');\n        }\n      },\n    },\n  ],\n  [\n    'Ligands',\n    {\n      url: 'ligands',\n      responseData (data) {\n        return data.number_of_bound_entities ? 'present' : 'absent';\n      },\n      title (responseData) {\n        switch (responseData) {\n          case 'present':\n            return 'This entry contains one or more ligands';\n          case 'absent':\n            return 'This entry does not contain any ligand';\n          case 'CGIlogoUnknown':\n            return (\n              'This icon conveys information about the presence ' +\n              'of ligands in the entry'\n            );\n          default:\n            throw new Error('Something bas happened');\n        }\n      },\n    },\n  ],\n]);\n\n// Unique id, for each instance, used for namespacing\nlet uniqueId = 1;\n\nconst categories = new Set(categoryUrls.keys());\n\n// Custom Element definition\nclass PdbPrints extends HTMLElement {\n  static get observedAttributes () {\n    return ['orientation', 'size', 'include', 'exclude'];\n  }\n\n  _handleLoadEvent (event) {\n    this.data = selector(event.detail);\n  }\n\n  _render () {\n    if (!this.data) return;\n    const id = this.data.entry_entity.slice(0, 4);\n    const sizePx = `${this.size}px`;\n    // If first render\n    if (!this.shadowRoot) {\n      this.attachShadow({mode: 'open'});\n      this.classList.add(this._namespace);\n    }\n    const style = `\n      <style>\n        :host {\n          font-family: \"Courier New\";\n          font-size: ${this.size / 3}px;\n          font-weight: bold;\n          display: inline-block;\n          overflow: hidden;\n        }\n        \n        :host a {\n          text-decoration: none;\n          cursor: pointer;\n        }\n        \n        :host > .root {\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex;\n          ${this.orientation === 'horizontal'\n            ? `-webkit-box-orient: horizontal;\n            -webkit-box-direction: normal;\n            -ms-flex-direction: row;\n            flex-direction: row;`\n            : `-ms-flex-direction: column;\n            flex-direction: column;`\n          };\n        }\n        \n        :host > .root > * {\n          height: ${sizePx};\n          width: ${sizePx};\n        }\n        \n        :host > .root > span {\n          display: -webkit-box;\n          display: -ms-flexbox;\n          display: flex;\n          -webkit-box-orient: vertical;\n          -webkit-box-direction: normal;\n          -ms-flex-direction: column;\n          flex-direction: column;\n          -webkit-box-pack: center;\n          -ms-flex-pack: center;\n          justify-content: center;\n          -webkit-box-align: center;\n          -ms-flex-align: center;\n          align-items: center;\n        }\n        \n        :host > .root > a {\n          border-radius: 10%;\n          background-color: #81C16E;\n          background-color: var(--theme-color, #81C16E);\n        }\n      </style>\n    `.trim();\n    (this.shadyRoot || this.shadowRoot).innerHTML = `\n      ${this.shadyRoot ? style.replace(/:host/g, `.${this._namespace}`) : style}\n      <span class=\"root\">\n        <span>\n          <a\n            title=\"${\n              'For more information about key features of this entry, ' +\n              'click on the individual icons'\n            }\"\n            href=\"//www.ebi.ac.uk/pdbe/entry/pdb/${id}/\"\n          >\n            ${id}\n          </a>\n          <a title=\"pdbe.org\" href=\"//www.ebi.ac.uk/pdbe\">\n            <img\n              src=\"//www.ebi.ac.uk/pdbe/widgets/html/PDBeWatermark_horizontal_${\n                this.size\n              }.png\"\n            >\n          </a>\n        </span>\n        ${[...categoryUrls.entries()]\n            .filter(([c]) => this._include.has(c) && !this._exclude.has(c))\n            .map(\n            ([category, {url, responseData, title}]) => {\n              const _responseData = responseData(this.data);\n              const _title = title(_responseData);\n              return `\n                <a\n                  href=\"//www.ebi.ac.uk/pdbe/entry/pdb/${id}/${url}\"\n                  title=\"${_title}\"\n                >\n                  <img\n                    src=\"//www.ebi.ac.uk/pdbe/widgets/pdblogos/transparent/${\n                      this.size\n                    }/${category}_${_responseData}.png\"\n                    alt=\"${_title}\"\n                  >\n                </a>\n              `.trim();\n            }\n          ).join('')}\n      </span>\n    `.trim();\n  }\n\n  _planRender () {\n    if (this._plannedRender) return;\n    this._plannedRender = true;\n    requestAnimationFrame(() => {\n      this._plannedRender = false;\n      this._render();\n    });\n  }\n\n  // Getters/Setters\n  // data\n  get data () {\n    return this._data;\n  }\n\n  set data (value) {\n    this._data = value;\n    this._planRender();\n  }\n\n  // orientation\n  get orientation () {\n    return this._orientation;\n  }\n\n  set orientation (value) {\n    let orientation;\n    switch (value.toLowerCase()[0]) {\n      case 'v':\n        orientation = 'vertical';\n        break;\n      case 'h':\n        orientation = 'horizontal';\n        break;\n      default:\n        throw new Error(`${value} is not a supported orientation`);\n    }\n    this._orientation = orientation;\n    this.setAttribute('orientation', orientation);\n    this._planRender();\n  }\n\n  // size\n  get size () {\n    return this._size;\n  }\n\n  set size (value) {\n    // Parses to number, accepts strings with px unit\n    let _value = Number(`${value}`.toLowerCase().replace('px', ''));\n    // If not a valid number, or had a non-px unit, throws\n    if (isNaN(_value)) throw new Error(`${value} is not a supported size`);\n    // If not a supported size, finds closest supported one to use instead\n    if (!supportedSizes.has(_value)) {\n      _value = [...supportedSizes]\n        .sort((a, b) => Math.abs(a - _value) - Math.abs(b - _value))[0];\n      console.warn(\n        `${value} is not a supported value, setting to closest one: ${_value}`\n      );\n    }\n    this._size = _value;\n    this.setAttribute('size', `${_value}px`);\n    this._planRender();\n  }\n\n  // include\n  get include () {\n    return [...this._include];\n  }\n\n  set include (value) {\n    let _values = value;\n    // If falsy value, sets to empty array\n    if (!_values) _values = [];\n    // If it's a string, might be coming from DOM attribute, clean up and parse\n    if (typeof _values === 'string') {\n      _values = _values.replace(/[[\\]'\"]/m).split(/\\s*,\\s*/);\n    }\n    // Removes invalid values\n    _values = _values.filter(v => categories.has(v));\n    if (_values.length) {\n      this._include = new Set(_values);\n      // Reflect values to DOM\n      this.setAttribute('include', _values.join(' '));\n    } else {\n      // If empty, uses default values and removes attribute from DOM\n      this._include = new Set(categories);\n      this.removeAttribute('include');\n    }\n    this._planRender();\n  }\n\n  // exclude\n  get exclude () {\n    return [...this._exclude];\n  }\n\n  set exclude (value) {\n    let _values = value;\n    // If falsy value, sets to empty array\n    if (!_values) _values = [];\n    // If it's a string, might be coming from DOM attribute, clean up and parse\n    if (typeof _values === 'string') {\n      _values = _values.replace(/[[\\]'\"]/m).split(/\\s*,\\s*/);\n    }\n    // Removes invalid values\n    _values = _values.filter(v => categories.has(v));\n    // Saves internally\n    this._exclude = new Set(_values);\n    if (_values.length) {\n      // Reflect values to DOM\n      this.setAttribute('exclude', _values.join(' '));\n    } else {\n      // If empty, removes DOM attribute\n      this.removeAttribute('exclude');\n    }\n    this._planRender();\n  }\n\n  // Custom element actions\n  constructor () {\n    super();\n    // defaults\n    this._data = null;\n    this._orientation = 'horizontal';\n    this._size = 36;\n    this._include = new Set(categories);\n    this._exclude = new Set();\n    // bind functions\n    this._handleLoadEvent = this._handleLoadEvent.bind(this);\n    this._planRender = this._planRender.bind(this);\n    this._render = this._render.bind(this);\n    // class namespacing (for pseudo-scoped CSS)\n    this._namespace = `${this.tagName.toLowerCase()}-${uniqueId++}`;\n  }\n\n  connectedCallback () {\n    this.addEventListener('load', this._handleLoadEvent);\n  }\n\n  disconnectedCallback () {\n    this.removeEventListener('load', this._handleLoadEvent);\n  }\n\n  attributeChangedCallback (attributeName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    this[attributeName] = newValue;\n  }\n}\n\nexport default PdbPrints;\n\n\n\n// WEBPACK FOOTER //\n// ./~/pdb-web-components/src/components/pdb-prints.js","import _PdbDataLoader from './pdb-data-loader';\nimport _PdbPrints from './pdb-prints';\n\nexport const PdbDataLoader = _PdbDataLoader;\nexport const PdbPrints = _PdbPrints;\n\n\n\n// WEBPACK FOOTER //\n// ./~/pdb-web-components/src/components/index.js"],"sourceRoot":""}